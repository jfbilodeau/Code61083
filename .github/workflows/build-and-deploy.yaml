name: Build and Test DemoWebApp

# Trigger the workflow on push events to the main branch
on:
  push:
    branches:
      - main
  workflow_dispatch: # Allow manual triggering of the workflow

jobs:
  build:
    # Use an Ubuntu runner
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout the code
    - name: Checkout code
      uses: actions/checkout@v2

    # Step 2: Set up .NET 8.0
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '8.0'  # Specify .NET 8.0 version

    # Step 3: Restore NuGet packages
    - name: Restore NuGet packages
      run: dotnet restore

    # Step 4: Build the project in Release configuration
    - name: Build
      run: dotnet build --configuration Release

    # Step 5: Run tests in Release configuration
    - name: Test
      run: dotnet test --configuration Release

    - name: Publish
      run: dotnet publish --configuration Release -o out

    - name: Save the deployment artifact
      uses: actions/upload-artifact@v4
      with:
        name: DemoWebApp
        path: ${{env.DOTNET_ROOT}}/out

  publish:
    runs-on: ubuntu-latest

    needs: build

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: DemoWebApp
  
      - name: Azure WebApp
        uses: Azure/webapps-deploy@v3
        with:
          # Name of the Azure Web App
          app-name: ${{ env.WEB_APP_NAME }}
          # Applies to Web Apps(Windows and Linux) and Web App Containers(linux). Multi container scenario not supported. Publish profile (*.publishsettings) file contents with Web Deploy secrets
          publish-profile: ${{ secrets.PUBLISH_PROFILE }}
          # # Enter an existing Slot other than the Production slot
          # slot-name: # optional, default is production
          # # Applies to Web App only: Path to package or folder. *.zip, *.war, *.jar or a folder to deploy
          # package: # optional, default is .
          # # Applies to Web App Containers only: Specify the fully qualified container image(s) name. For example, 'myregistry.azurecr.io/nginx:latest' or 'python:3.7.2-alpine/'. For multi-container scenario multiple container image names can be provided (multi-line separated)
          # images: # optional
          # # Applies to Web App Containers only: Path of the Docker-Compose file. Should be a fully qualified path or relative to the default working directory. Required for multi-container scenario
          # configuration-file: # optional
          # # Enter the start up command. For ex. dotnet run or dotnet run
          # startup-command: # optional
          # # Enter the resource group name of the web app
          # resource-group-name: # optional
          # # Enter deployment type (JAR, WAR, EAR, ZIP, Static)
          # type: # optional
          # # Target path in the web app. For ex. '/home/site/wwwroot'
          # target-path: # optional
          # # Delete existing files target directory before deploying
          # clean: # optional
          # # Restart the app service after deployment
          # restart: # optional
                
      
